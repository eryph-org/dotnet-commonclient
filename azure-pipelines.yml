  
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- refs/tags/v*

pool:
  vmImage: windows-latest  

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: UseGitVersion@5
      inputs:
        versionSpec: '5.x'

    - task: DotNetCoreCLI@2
      displayName: dotnet restore
      inputs:
        command: 'restore'
        restoreArguments: '--disable-parallel'
        feedsToUse: 'config'
        nugetConfigPath: './nuget.config'

    - task: DotNetCoreCLI@2
      displayName: dotnet build
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration) --no-restore'
        
    - task: DotNetCoreCLI@2
      displayName: dotnet pack
      inputs:
        command: pack
        packDirectory: '$(Build.ArtifactStagingDirectory)\packages'
        arguments: '--no-build --configuration $(BuildConfiguration)'
        versioningScheme: 'off'

    - task: PublishBuildArtifacts@1
      displayName: publish nuget artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)\packages'
        ArtifactName: 'packages'
        publishLocation: 'Container'

    - task: PowerShell@2
      displayName: generate cmdlet
      inputs:
        filePath: 'build/build-cmdlet.ps1'
        arguments: '-Configuration $(BuildConfiguration) -OutputDir $(Build.ArtifactStagingDirectory)' 

    - task: PublishBuildArtifacts@1
      displayName: publish cmdlet artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)\cmdlet'
        ArtifactName: 'cmdlet'
        publishLocation: 'Container'

- stage: Test
  dependsOn: Build
  jobs:
  - job: Test
    steps:
    - task: DotNetCoreCLI@2
      displayName: dotnet test
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        arguments: ' --no-build --configuration $(buildConfiguration) --collect "Code coverage"'

- stage: Publish
  dependsOn: Test
  jobs:
  - job: Publish
    steps:
    - task: NuGetCommand@2
      displayName: publish packages to public feed
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: '59a3608a-9bed-4cb4-9467-6efaaa3cbef5/1e425ef4-e3a0-4927-b4c0-2beff753cb88'   

